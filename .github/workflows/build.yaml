name: Build Flutter App

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Check SSH Connection
        run: |
          sshpass -p ${{ secrets.SSH_PASSWORD }} ssh -o StrictHostKeyChecking=no -P 22 ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_SERVER }} exit
        continue-on-error: false

      - name: Set up FVM
        run: |
          curl -fsSL https://fvm.app/install.sh | bash
          fvm install

      - name: Install Flutter using FVM
        run: fvm flutter --version

      - name: Install dependencies
        run: fvm flutter pub get

      - name: Generate code
        run: fvm dart run build_runner build --delete-conflicting-outputs

      - name: Create config.json file
        run: echo '${{ secrets.CONFIG_FILE }}' > config.json

      - name: Validate JSON file
        run: |
          if ! jq . config.json > /dev/null 2>&1; then
            echo "Invalid JSON format in config.json"
            exit 1
          fi

      - name: Build APK
        env:
          RELEASE_KEY_ALIAS: ${{ secrets.RELEASE_KEY_ALIAS }}
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
          RELEASE_STORE_FILE: ${{ secrets.RELEASE_STORE_FILE }}
          RELEASE_STORE_PASSWORD: ${{ secrets.RELEASE_STORE_PASSWORD }}
        run: fvm flutter build apk --release --dart-define-from-file=config.json

      - name: Build Flutter web
        run: fvm flutter build web --release --dart-define-from-file=config.json

      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      - name: Upload APK to Server via SFTP
        run: |
          sshpass -p ${{ secrets.SSH_PASSWORD }} sftp -o StrictHostKeyChecking=no -P 22 ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_SERVER }} << 'EOF'
          cd ${{ secrets.DEPLOY_PATH_APP }}
          put build/app/outputs/flutter-apk/app-release.apk
          bye
          EOF

      - name: Upload web build to Server via SFTP
        run: |
          sshpass -p ${{ secrets.SSH_PASSWORD }} sftp -o StrictHostKeyChecking=no -P 22 ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_SERVER }} << 'EOF'
          cd ${{ secrets.DEPLOY_PATH_WEB }}
          put -r build/web/*
          bye
          EOF
